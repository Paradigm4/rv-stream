load_library('accelerated_io_tools');
load_library('equi_join');
load_library('stream');


store(
  redimension(
    stream(
      apply(
        aio_input(
          'path=/a/example/example.vcf',
          'header=1',
          'num_attributes=509'),
        chrom, int64(a0),
        pos,   int64(a1),
        qual,  int64(a5)),
      'python -u /a/load.py',
      'format=feather',
      'types=int64,int64,int64,string,string,string,int64,string,string,string,string',
      'names=chrom,pos,p,id,ref,alt,qual,flt,info,fmt,gt'),
    <id:   string,
     ref:  string,
     alt:  string,
     qual: int64,
     flt:  string,
     info: string,
     fmt:  string,
     gt:   string>
    [chrom, pos=0:*:0:1, p=1:500:0:500]),
  var);


store(
  redimension(
    apply(
      aio_input(
        'path=/a/example/pheno',
        'header=1',
        'num_attributes=9',
        'attribute_delimiter= '),
      fid,   int64(trim(a0, 'P')),
      iid,   a1,
      fatid, int64(a2),
      matid, int64(a3),
      sex,   int64(a4),
      y1,    double(a5),
      y2,    double(a6),
      y3,    double(a7),
      y4,    int64(a8)),
    <iid:  string,
     fatid: int64,
     matid: int64,
     sex:   int64,
     y1:    double,
     y2:    double,
     y3:    double,
     y4:    int64>[fid=1:500:0:500]),
  pheno);
